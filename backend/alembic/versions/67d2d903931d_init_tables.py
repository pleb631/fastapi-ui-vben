"""init tables

Revision ID: 67d2d903931d
Revises: 
Create Date: 2025-09-23 14:25:46.515912

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '67d2d903931d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('access',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('access_name', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('scopes', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('access_desc', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('menu_icon', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('is_check', sa.Boolean(), nullable=False),
    sa.Column('is_menu', sa.Boolean(), nullable=False),
    sa.Column('create_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['access.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('access_name'),
    sa.UniqueConstraint('scopes'),
    comment='权限表'
    )
    op.create_index(op.f('ix_access_parent_id'), 'access', ['parent_id'], unique=False)
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_name', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=False),
    sa.Column('role_status', sa.Boolean(), nullable=False),
    sa.Column('role_desc', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('create_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role_name'),
    comment='角色表'
    )
    op.create_table('system_params',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('params_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('params', sa.JSON(), nullable=False),
    sa.Column('create_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('params_name'),
    comment='系统参数表'
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('user_type', sa.Boolean(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('nickname', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('user_phone', sqlmodel.sql.sqltypes.AutoString(length=11), nullable=True),
    sa.Column('user_email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('user_status', sa.Integer(), nullable=False),
    sa.Column('avatar', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('gender', sa.Integer(), nullable=False),
    sa.Column('remarks', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=True),
    sa.Column('client_host', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=True),
    sa.Column('create_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username'),
    comment='用户表'
    )
    op.create_table('access_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('target_url', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('request_params', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ip', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('note', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('create_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='用户操作记录表'
    )
    op.create_table('role_access_link',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('access_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['access_id'], ['access.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_id', 'access_id')
    )
    op.create_table('user_role_link',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('user_wechat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('headimgurl', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('nickname', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('openid', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('unionid', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('province', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('gender', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('create_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='用户微信'
    )
    op.create_index(op.f('ix_user_wechat_user_id'), 'user_wechat', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_wechat_user_id'), table_name='user_wechat')
    op.drop_table('user_wechat')
    op.drop_table('user_role_link')
    op.drop_table('role_access_link')
    op.drop_table('access_log')
    op.drop_table('user')
    op.drop_table('system_params')
    op.drop_table('role')
    op.drop_index(op.f('ix_access_parent_id'), table_name='access')
    op.drop_table('access')
    # ### end Alembic commands ###
